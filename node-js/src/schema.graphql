# -------------------
# Hsckersnews clone
# GraphQl Schema
# -------------------


# --- Schemas --- #

"User schema"
type User {
  id: ID!
  name: String!
  email: String!

  links: [Link!]!
}

"Auth response"
type AuthPayload {
  token: String
  user: User
}

"Link schema"
type Link {
  id: ID!
  description: String!
  url: String!

  postedBy: User
  votes: [Vote!]!
  
  createdAt: String
  updatedAt: String
}

"Vote schema"
type Vote {
  id: ID!
  link: Link!
  user: User!
}


# --- Querys --- #

type Query {

  "Return all stored Links"
  feed(filter: String): [Link!]!

  "Fecth a single Link by id"
  link(id: ID!): Link

}


# --- Mutattions --- #

type Mutation {

  # --- OPERATIONS ABOUT USER --- #

  "Register new User"
  signup(email: String!, password: String!, name: String!): AuthPayload
  "Login a user"
  login(email: String!, password: String!): AuthPayload


  # --- OPERATIONS ABOUT LINK --- #

  "Create new Link"
  postLink(url: String!, description: String!): Link!
  "Update existing Link"
  updateLink(id: ID!, url: String, description: String): Link
  "Delete existing Link"
  deleteLink(id: ID!): Link


  # --- OPERATIONS ABOUT LINK --- #

  "Add a vote on Link"
  vote(linkId: ID!): Vote
}


# --- Subscription --- #

type Subscription {

  "On link creation"
  newLink: Link
  "On removed link"
  removeLink: Link
  "On new Vote"
  newVote: Vote
}
